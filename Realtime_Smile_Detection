# Importing the OPENCV library.

import cv2

# Loading the PreTrained Cascade that is Haarcascade for face,eye,smile using this command.

face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
eye_cascade = cv2.CascadeClassifier('haarcascade_eye.xml')
smile_cascade = cv2.CascadeClassifier('haarcascade_smile.xml')

# Defining a function that will do the detections
#The live feed coming from the webcam/video device is processed frame by frame.
#We process the gray scale image, as haar-cascades work better on them.


def detect(gray, frame):

    #To detect the face, we use this function with 5 nearest neighbours.
    
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)


    #The face data is stored as tuples of coordinates
    #The roi_gray defines the region of interest of the face and roi_color does the same for the original frame.
    #The cv2.rectangle function takes in the arguments frame, upper-left coordinates of the face,
    lower right coordinates, the RGB code for the rectangle


    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)
        roi_gray = gray[y:y+h, x:x+w]
        roi_color = frame[y:y+h, x:x+w]
        eyes = eye_cascade.detectMultiScale(roi_gray, 1.1, 22)
        for (ex, ey, ew, eh) in eyes:
            cv2.rectangle(roi_color, (ex, ey), (ex+ew, ey+eh), (0, 255, 0), 2)
        smiles = smile_cascade.detectMultiScale(roi_gray, 1.7, 22)
        for (sx, sy, sw, sh) in smiles:
            print(len(smiles))
            cv2.rectangle(roi_color, (sx, sy), (sx+sw, sy+sh), (0, 0, 255), 2)
    return frame


# Doing some Face Recognition with the webcam
#This command is used to access the laptop's webcam.


video_capture = cv2.VideoCapture(0)
while True:

    #this block is used to read and conversion from bgr to grey scale images 
    
    
    _, frame = video_capture.read()
    frame = frame.transpose((1,0, 2))[::-1,:,:]
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    
    
    #at the end we produce the desired output using these commands.
    
    canvas = detect(gray, frame)
    cv2.imshow('Video', canvas)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
video_capture.release()
cv2.destroyAllWindows()
